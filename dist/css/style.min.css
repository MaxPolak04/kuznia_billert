.wrapper{width:100%;max-width:1200px;margin:0 auto}.main__heading{margin:4em 0 1.5em;text-transform:uppercase;text-align:center;font-weight:300;font-size:3rem}.section{margin:0 1.5em;background-color:#000}.section__heading{margin:1.5em 0;text-transform:uppercase;text-align:center;font-weight:300;font-size:3rem}.section__line{width:100%;max-width:1200px;height:2px;margin:.5em auto;border-radius:3px;background-color:#fff}@media (width >= 576px){.section__heading{margin-top:2em}}@media (width >= 992px){.section__heading{margin:4em 0 2em;font-size:3.5rem}}.nav .navbar{position:fixed;top:0;left:0;right:0;z-index:1000;display:flex;justify-content:space-between;align-items:center;height:5em;background-color:rgba(0,0,0,.6117647059)}.nav__brand{display:inline-block;text-decoration:none;width:3em;margin:0 1.5em}.nav__btn{position:absolute;width:4em;padding:.3em;margin:1em 1.2em;border:none;background:none;color:#fff;cursor:pointer}.nav__btn-burger,.nav__btn-x,.nav__mobile{top:0;right:0}.nav__mobile{position:fixed;left:0;z-index:1000;display:flex;flex-direction:column;bottom:0;height:100vh;width:100vw;text-align:center;background-color:#000;transform:translateX(110%);transition:transform .3s;z-index:1100}.nav__mobile--active{transform:translateX(0)}.nav__mobile-link{margin:auto 0;text-decoration:none;font-size:3.2rem;color:#fff;transition:color .3s}.nav__mobile-link:first-of-type{margin-top:2.5em}.nav-items-animation{animation:a .5s both}.nav__desktop{display:none}.nav__img{width:100%}@keyframes a{0%{transform:translateX(200%)}to{transform:translateX(0)}}@media (992px <= width){.nav .navbar{display:none}.nav__brand{width:4em}.nav__mobile{display:none}.nav__desktop{position:fixed;top:0;left:0;right:0;z-index:1000;display:flex;justify-content:space-around;align-items:center;height:6em;background-color:rgba(0,0,0,.6117647059)}.nav__desktop-box{display:flex;justify-content:center;align-items:center}.nav__desktop-link{padding:.2em;margin:0 .5em;height:100%;font-size:2.2rem;font-weight:300;text-decoration:none;color:#fff;transition:font-weight .2s}.nav__desktop-link:hover{font-weight:400}}@media (width >= 1200px){.nav__desktop-link{font-size:2.8rem}}.hero-img{height:100vh;position:relative;background-image:url(../../../dist/img/hero-img.jpg);background-position:50%;background-size:cover;z-index:0;background-position:top;background-attachment:fixed;overflow:hidden}.hero-img__shadow{background-color:rgba(0,0,0,.6117647059);z-index:-1}.hero-img__content,.hero-img__shadow{position:absolute;top:0;bottom:0;left:0;right:0}.hero-img__content{display:grid;grid-template-columns:repeat(12,1fr);grid-template-rows:repeat(12,1fr);color:#fff;z-index:1}.hero-img__header{position:relative;grid-column:2/-2;grid-row:5/6;align-content:flex-end;text-transform:uppercase;font-weight:700;font-size:3rem}.hero-img__header:before{position:absolute;top:.1em;left:-.5em;width:2px;height:150%;border-radius:3px;background-color:#fff;transition:transform .3s;content:""}.hero-img__text{grid-column:2/-1;grid-row:6/7;font-weight:300;font-size:2.5rem}@media (width >= 768px){.hero-img__header:before{height:200%}}@media (width >= 992px){.hero-img__header{font-size:3.5rem}}@media (width >= 1400px){.hero-img__content{grid-template-columns:repeat(24,1fr)}.hero-img__header{grid-column:3/-3;font-size:4rem}.hero-img__text{grid-column:3/-3}}.offer__content{justify-content:space-evenly;margin-bottom:1.5em}.offer__box,.offer__content{display:flex;flex-direction:column;align-items:center}.offer__box{justify-content:center;max-width:40em;padding:1em;margin:.5em 0;border-radius:3px;background-color:#222}.offer__box-img{width:100%;border-radius:3px}.offer__box-content{display:flex;flex-direction:column;justify-content:center;align-items:center}.offer__box-heading{margin:1em 0;text-transform:uppercase;text-align:center;font-weight:300}.offer__box-text{text-align:justify}.offer__box-link{display:block;padding:.5em 1em;margin:1.5em 0 1em;border-radius:3px;text-decoration:none;text-align:center;border:2px solid #fff;background:none;color:#fff;transition:font-weight .2s,background-color .2s,color .2s}.offer__box-link:hover{font-weight:600;background-color:#fff;color:#222}@media (width >= 576px){.offer__box-heading{margin-top:2em}.offer__box-link{padding:1em 2em}}@media (width >= 768px){.offer__box-heading{font-size:2.5rem}}@media (width >= 992px){.offer__content{display:grid;grid-template-columns:repeat(2,1fr);grid-template-rows:repeat(2,1fr);gap:1em;margin-bottom:3em}.offer__box{display:grid;grid-template-columns:repeat(1,1fr);grid-template-rows:2;height:100%;max-height:60em}.offer__box--one{grid-column:1/2;grid-row:1/2}.offer__box--two{grid-column:2/3;grid-row:1/2}.offer__box--three{grid-column:1/2;grid-row:2/3}.offer__box--four{grid-column:2/3;grid-row:2/3}.offer__box-img{grid-column:1/2;grid-row:1/2;height:100%}.offer__box-content{grid-column:1/2;grid-row:2/3;display:grid;grid-template-columns:repeat(9,1fr);grid-template-rows:repeat(3,1fr)}.offer__box-heading{grid-column:1/-1;grid-row:1/2}.offer__box-text{grid-column:1/-1;grid-row:2/3}.offer__box-link{grid-column:4/-4;grid-row:3/4}}.aboutme__content{display:flex;flex-direction:column;justify-content:center;align-items:center;margin:0 1.5em}.aboutme__img{width:20em;border-radius:3px}.aboutme__heading{margin:2em 0 1em;text-align:center;font-weight:300;font-size:2rem}.aboutme__text{width:100%;max-width:40em;margin:0 auto;text-align:justify}.aboutme__text-strong{font-weight:700}.aboutme__list{max-width:40em;margin:1em auto}.aboutme__item{margin:1em}.aboutme__paragraph{margin-top:1.5em;margin-bottom:.5em}.aboutme__socialmedia{display:flex;justify-content:center;align-items:center;margin:1em 0}.aboutme__socialmedia-link{display:block;width:3em;margin:0 .5em;transition:scale .2s}.aboutme__socialmedia-link:hover{scale:1.1}.aboutme__socialmedia-img{width:100%}@media (width >= 576px){.aboutme__img{width:30em}.aboutme__heading{font-size:2.5rem}}@media (width >= 768px){.aboutme__img{width:40em}.aboutme__text{max-width:40em}.aboutme__socialmedia-link{width:4em;margin:0 1em}}@media (width >= 992px){.aboutme__heading{font-size:3rem}.aboutme__socialmedia{margin:3em 0}}@media (width >= 1200px){.aboutme__text{max-width:none}.aboutme__list{max-width:-moz-fit-content;max-width:fit-content}.aboutme__paragraph{margin-top:3em;font-size:2rem}.aboutme__socialmedia-link{width:6em}}.accordion{margin:0 1em;border-radius:3px}.accordion-button{text-transform:uppercase;font-size:3rem}.accordion-item{background-color:#000}.accordion-body{display:grid;grid-template-columns:repeat(3,1fr);grid-auto-flow:row dense}.accordion-img{width:100%;border-radius:3px;margin:.25em}.workshops__box{display:flex;flex-direction:column;justify-content:center;align-items:center}.workshops__heading{margin:1em 0;text-align:center;font-size:2.5rem}.workshops__text{text-align:justify}.workshops img{width:300px;border-radius:3px}.workshops__galery{display:none}.carousel{margin:2em 0;border-radius:3px}@media (width >= 576px){.workshops img{width:400px}}@media (width >= 768px){.workshops img{width:500px}}@media (width >= 992px){.workshops__box{display:flex;flex-direction:row;justify-content:space-between;align-items:center}.workshops__content{margin-left:1.5em}.workshops__galery{display:flex;justify-content:space-evenly;flex-wrap:wrap;align-items:center;margin:2em 0}.workshops__galery img{width:250px}.carousel{display:none}}.contact__box{position:relative;background-image:url(../../../dist/img/anvil_and_nuts_2.jpg);background-position:50%;background-size:cover;z-index:0;display:flex;flex-direction:column;justify-content:center;padding:1em;align-items:center;border:2px solid #fff;border-radius:3px}.contact__shadow{position:absolute;top:0;bottom:0;left:0;right:0;background-color:rgba(0,0,0,.6117647059);z-index:-1;background-color:rgba(0,0,0,.7058823529)}.contact__minibox{text-align:center}.contact__text{margin-bottom:0;font-size:2rem;text-transform:uppercase}.contact__text--one{margin-bottom:1em;text-align:center;text-transform:capitalize}.contact__paragraph{margin-bottom:1em;font-weight:700}@media (width >= 576px){.contact__box{width:25em;margin:0 auto}}@media (width >= 768px){.contact__box{width:40em;height:30em;margin:0 auto}}@media (width >= 992px){.contact__text--one{margin-top:5em;margin-bottom:3em}}@media (width >= 1200px){.contact__box{width:50em;height:35em;margin:0 auto}.contact__paragraph{margin-bottom:3em}}.footer{background-color:#000}.footer__copyrights{margin:2em;text-align:center;font-size:1rem;color:#fff}@media (width >= 992px){.footer__copyrights{font-size:1.5rem}}*,:after,:before{box-sizing:border-box;margin:0;padding:0}html{font-size:62.5%;scroll-behavior:smooth;scroll-padding-top:10em}body{position:relative;min-height:100vh;font-family:Quicksand,sans-serif;font-size:1.6rem;background-color:#000;color:#fff}main{min-height:75vh}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
