.wrapper{width:100%;max-width:1200px;margin:0 auto}.main__heading{margin:4em 0 1.5em;text-transform:uppercase;text-align:center;font-weight:300;font-size:3rem}.section{margin:0 1.5em;background-color:#000}.section__heading{margin:1.5em 0;text-transform:uppercase;text-align:center;font-weight:300;font-size:3rem}.section__line{width:100%;max-width:1200px;height:2px;margin:.5em auto;border-radius:3px;background-color:#fff}@media (width >= 576px){.section__heading{margin-top:2em}}@media (width >= 992px){.section__heading{margin:4em 0 2em;font-size:3.5rem}.section__line{margin-top:2em}}.nav .navbar{position:fixed;top:0;left:0;right:0;z-index:1000;display:flex;justify-content:space-between;align-items:center;height:5em;background-color:rgba(0,0,0,.6117647059)}.nav__brand{display:inline-block;text-decoration:none;width:3em;margin:0 1.5em}.nav__btn{position:absolute;width:4em;padding:.3em;margin:1em 1.2em;border:none;background:none;color:#fff;cursor:pointer}.nav__btn-burger,.nav__btn-x,.nav__mobile{top:0;right:0}.nav__mobile{position:fixed;left:0;z-index:1000;display:flex;flex-direction:column;bottom:0;height:100vh;width:100vw;text-align:center;background-color:#000;transform:translateX(110%);transition:transform .3s;z-index:1100}.nav__mobile--active{transform:translateX(0)}.nav__mobile-link{margin:auto 0;text-decoration:none;font-size:3.2rem;color:#fff;transition:color .3s}.nav__mobile-link:first-of-type{margin-top:2.5em}.nav-items-animation{animation:a .5s both}.nav__desktop{display:none}.nav__img{width:100%}@keyframes a{0%{transform:translateX(200%)}to{transform:translateX(0)}}@media (992px <= width){.nav .navbar{display:none}.nav__brand{width:4em}.nav__mobile{display:none}.nav__desktop{position:fixed;top:0;left:0;right:0;z-index:1000;display:flex;justify-content:space-around;align-items:center;height:6em;background-color:rgba(0,0,0,.6117647059)}.nav__desktop-box{display:flex;justify-content:center;align-items:center}.nav__desktop-link{padding:.2em;margin:0 .5em;height:100%;font-size:2.2rem;font-weight:300;text-decoration:none;color:#fff;transition:font-weight .2s}.nav__desktop-link:hover{font-weight:400}}@media (width >= 1200px){.nav__desktop-link{font-size:2.8rem}}.hero-img{height:100vh;position:relative;background-image:url(../../../dist/img/hero-img.jpg);background-position:50%;background-size:cover;z-index:0;background-position:top;background-attachment:fixed;overflow:hidden}.hero-img__shadow{background-color:rgba(0,0,0,.6117647059);z-index:-1}.hero-img__content,.hero-img__shadow{position:absolute;top:0;bottom:0;left:0;right:0}.hero-img__content{display:grid;grid-template-columns:repeat(12,1fr);grid-template-rows:repeat(12,1fr);color:#fff;z-index:1}.hero-img__header{position:relative;grid-column:2/-2;grid-row:5/6;align-content:flex-end;text-transform:uppercase;font-family:Junge,cursive;font-weight:400;font-style:normal;font-size:3rem}.hero-img__header:before{position:absolute;top:.1em;left:-.5em;width:2px;height:150%;border-radius:3px;background-color:#fff;transition:transform .3s;content:""}.hero-img__text{grid-column:2/-1;grid-row:6/7;font-weight:300;font-size:2.5rem}@media (width >= 768px){.hero-img__header:before{height:200%}}@media (width >= 992px){.hero-img__header{font-size:3.5rem}}@media (width >= 1400px){.hero-img__content{grid-template-columns:repeat(24,1fr)}.hero-img__header{grid-column:3/-3;font-size:4rem}.hero-img__text{grid-column:3/-3}}.offer__content{display:flex;flex-direction:column;justify-content:center;align-items:center}.offer__box{margin:1em 0;border:2px solid #fff;border-radius:3px;overflow:hidden}.offer__box-img{width:100%}.offer__box-content{padding:2em;z-index:10}.offer__box-heading{margin-bottom:.5em;text-transform:uppercase;text-align:center;font-size:2.4rem;font-weight:300}.offer__box-text{margin-bottom:.5em;font-size:1.3rem}.offer__box-link{display:block;padding:.5em 1em;margin:1.5em auto 1em;width:50%;border-radius:3px;text-decoration:none;text-align:center;border:2px solid #fff;background:none;color:#fff;transition:font-weight .2s,background-color .2s,color .2s}.offer__box-link:hover{font-weight:600;background-color:#fff;color:#000}@media (width >= 576px){.offer__box{display:flex;flex-direction:row;margin:2em 0;width:100%}.offer__box-img{width:50%;height:auto}.offer__box-img--right{order:1}.offer__box-content{display:flex;flex-direction:column;justify-content:space-between}.offer__box-heading{margin-bottom:.5em;font-size:3.6rem}.offer__box-text{text-align:justify}}@media (width >= 992px){.offer__box-img{object-fit:cover;height:400px}.offer__box-text{font-size:1.5rem}}.aboutme__content{display:flex;flex-direction:column;justify-content:center;align-items:center;margin:0 1.5em}.aboutme__img{width:20em;border-radius:3px}.aboutme__heading{margin:2em 0 1em;text-align:center;font-weight:300;font-size:2rem}.aboutme__text{width:100%;max-width:40em;margin:0 auto;text-align:justify}.aboutme__text-strong{font-weight:700}.aboutme__list{max-width:40em;margin:1em auto}.aboutme__item{margin:1em}.aboutme__paragraph{margin-top:1.5em;margin-bottom:.5em}.aboutme__socialmedia{display:flex;justify-content:center;align-items:center;margin:1em 0}.aboutme__socialmedia-link{display:block;width:3em;margin:0 .5em;transition:scale .2s}.aboutme__socialmedia-link:hover{scale:1.1}.aboutme__socialmedia-img{width:100%}@media (width >= 576px){.aboutme__img{width:30em}.aboutme__heading{font-size:2.5rem}}@media (width >= 768px){.aboutme__img{width:40em}.aboutme__text{max-width:40em}.aboutme__socialmedia-link{width:4em;margin:0 1em}}@media (width >= 992px){.aboutme__heading{font-size:3rem}.aboutme__socialmedia{margin:3em 0}}@media (width >= 1200px){.aboutme__text{max-width:none}.aboutme__list{max-width:-moz-fit-content;max-width:fit-content}.aboutme__paragraph{margin-top:3em;font-size:2rem}.aboutme__socialmedia-link{width:6em}}.offers__box{display:flex;flex-direction:column;justify-content:center;align-items:center}.offers__option{margin:1em 0;border:2px solid #fff;border-radius:3px;overflow:hidden}.offers__option-img{width:100%;transition:transform .3s}.offers__option-img:hover{transform:scale(1.1)}.offers__option-info{padding:2em;z-index:10}.offers__option-heading{margin-bottom:.5em;font-size:2.4rem;font-weight:300}.offers__option-text{margin-bottom:.5em;font-size:1.3rem}@media (width >= 576px){.offers__option{display:flex;margin:2em 0;width:100%}.offers__option-img{width:50%;height:auto}.offers__option-img--right{order:1}.offers__option-info{display:flex;flex-direction:column;justify-content:space-between}.offers__option-heading{margin-bottom:.5em;font-size:3.6rem}}@media (width >= 992px){.offers__option-img{object-fit:cover;height:300px}.offers__option-text{font-size:1.5rem}}.portfolio{margin-bottom:5em}.portfolio__gallery{display:grid;grid-template-columns:repeat(1,1fr);gap:1em;width:100%}.portfolio__column--one{grid-column:1/2}.portfolio__column--two{grid-column:2/3;grid-column:1/2}.portfolio__column--three{grid-column:3/4;grid-column:1/2}.portfolio__img{width:100%;margin:.5em 0;border-radius:3px}@media (width >= 576px){.portfolio__column--one{grid-column:1/2}.portfolio__column--two{grid-column:2/3}.portfolio__column--three{grid-column:3/4}}@media (width >= 992px){.portfolio__gallery{grid-template-columns:repeat(3,1fr)}}.workshops__box{display:flex;flex-direction:column;justify-content:center;align-items:center}.workshops__heading{margin:1em 0;text-align:center;font-size:2.5rem}.workshops__text{text-align:justify}.workshops img{width:300px;border-radius:3px}.workshops__galery{display:none}.carousel{margin:2em 0;border-radius:3px}@media (width >= 576px){.workshops img{width:400px}}@media (width >= 768px){.workshops img{width:500px}}@media (width >= 992px){.workshops__box{display:flex;flex-direction:row;justify-content:space-between;align-items:center}.workshops__content{margin-left:1.5em}.workshops__galery{display:flex;justify-content:space-evenly;flex-wrap:wrap;align-items:center;margin:2em 0}.workshops__galery img{width:250px}.carousel{display:none}}.contact__box{position:relative;background-image:url(../../../dist/img/anvil_and_nuts_2_small.jpg);background-position:50%;background-size:cover;z-index:0;display:flex;flex-direction:column;justify-content:center;padding:1em;margin-bottom:2em;align-items:center;border:2px solid #fff;border-radius:3px}.contact__shadow{position:absolute;top:0;bottom:0;left:0;right:0;background-color:rgba(0,0,0,.6117647059);z-index:-1;background-color:rgba(0,0,0,.7058823529)}.contact__minibox{text-align:center}.contact__text{margin-bottom:0;font-size:2rem;text-transform:uppercase}.contact__text--one{margin-bottom:1em;text-align:center;text-transform:capitalize}.contact__paragraph{margin-bottom:1em;font-weight:700}.contact__socialmedia{display:flex;justify-content:center;align-items:center;margin:1em 0}.contact__socialmedia-link{display:block;width:3em;margin:0 .5em;transition:scale .2s}.contact__socialmedia-link:hover{scale:1.1}.contact__socialmedia-img{width:100%}@media (width >= 576px){.contact__box{width:25em;margin:0 auto 2em}}@media (width >= 768px){.contact__box{width:40em;height:30em;margin:0 auto 3em}.contact__socialmedia-link{width:4em;margin:0 1em}}@media (width >= 992px){.contact__box{position:relative;background-image:url(../../../dist/img/anvil_and_nuts_2.jpg);background-position:50%;background-size:cover;z-index:0;margin-bottom:5em}.contact__text--one{margin-top:5em;margin-bottom:3em}.contact__socialmedia{margin:3em 0}}@media (width >= 1200px){.contact__box{width:50em;height:35em;margin:0 auto 5em}.contact__paragraph{margin-bottom:3em}.contact__socialmedia-link{width:6em}}.footer{background-color:#000}.footer__copyrights{margin:2em;text-align:center;font-size:1rem;color:#fff}@media (width >= 992px){.footer__copyrights{font-size:1.5rem}}*,:after,:before{box-sizing:border-box;margin:0;padding:0}html{font-size:62.5%;scroll-behavior:smooth;scroll-padding-top:10em}body{position:relative;min-height:100vh;font-family:Quicksand,sans-serif;font-size:1.6rem;background-color:#000;color:#fff}main{min-height:75vh}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
